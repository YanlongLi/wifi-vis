(function(){
    var EventManager = {};

    var floorSelectedList = [],
        floorHoveredList = [],
        apSelectedList = [],
        apHoveredList = [],
        deviceSelectedList = [],
        deviceHoveredList = [];        

    EventManager.floorSelected = function(list) {
        floorSelectedList = _.union(floorSelectedList, list);
        ObserverManager.post(WFV.Message.FloorSelect, 
            {floor:floorSelectedList, change:list, isAdd: true}
        );
    }
    EventManager.floorDeselected = function(list) {
        floorSelectedList = _.difference(floorSelectedList, list);
        ObserverManager.post(WFV.Message.FloorSelect, 
            {floor:floorSelectedList, change:list, isAdd: false}
        );
    }
    EventManager.floorHovered = function(list) {
        floorHoveredList = _.union(floorHoveredList, list);
        ObserverManager.post(WFV.Message.FloorHover, 
            {floor:floorHoveredList, change:list, isAdd: true}
        );        
    }
    EventManager.floorDehovered = function(list) {
        floorHoveredList = _.difference(floorHoveredList, list);
        ObserverManager.post(WFV.Message.FloorHover, 
            {floor:floorHoveredList, change:list, isAdd: false}
        );         
    }

    EventManager.apSelected = function(list) {
        apSelectedList = _.union(apSelectedList, list);
        ObserverManager.post(WFV.Message.APSelect, 
            {apid:apSelectedList, change:list, isAdd: true}
        );        
    }
    EventManager.apDeselected = function(list) {
        apSelectedList = _.difference(apSelectedList, list);
        ObserverManager.post(WFV.Message.APSelect, 
            {apid:apSelectedList, change:list, isAdd: false}
        );        
    }
    EventManager.apHovered = function(list) {
        apHoveredList = _.union(apHoveredList, list);
        ObserverManager.post(WFV.Message.APHover, 
            {apid:apHoveredList, change:list, isAdd: true}
        );        
    }
    EventManager.apDehovered = function(list) {
        apHoveredList = _.difference(apHoveredList, list);
        ObserverManager.post(WFV.Message.APHover, 
            {apid:apHoveredList, change:list, isAdd: false}
        );         
    }

    EventManager.deviceSelected = function(list) {
        deviceSelectedList = _.union(deviceSelectedList, list);
        ObserverManager.post(WFV.Message.DeviceSelect, 
            {device:deviceSelectedList, change:list, isAdd: true}
        );                
    }
    EventManager.deviceDeselected = function(list) {
        deviceSelectedList = _.difference(deviceSelectedList, list);
        ObserverManager.post(WFV.Message.DeviceSelect, 
            {device:deviceSelectedList, change:list, isAdd: false}
        );          
    }
    EventManager.deviceHovered = function(list) {
        deviceHoveredList = _.union(deviceHoveredList, list);
        ObserverManager.post(WFV.Message.DeviceHover, 
            {device:deviceHoveredList, change:list, isAdd: true}
        );          
    }
    EventManager.deviceDehovered = function(list) {
        deviceHoveredList = _.difference(deviceHoveredList, list);
        ObserverManager.post(WFV.Message.DeviceHover, 
            {device:deviceHoveredList, change:list, isAdd: false}
        );          
    }


    window["EventManager"] = EventManager;
})()
